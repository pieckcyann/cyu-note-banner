/* eslint-disable @typescript-eslint/ban-ts-comment */
import 'dotenv/config';
import fs from 'fs/promises';
import builtins from 'builtin-modules';
// @ts-ignore
import copyNewer from 'copy-newer';
import esbuild from 'esbuild';
import esbuildSvelte from 'esbuild-svelte';
import sveltePreprocess from 'svelte-preprocess';

const BANNER = `/*
- THIS IS A GENERATED/BUNDLED FILE BY ESBUILD -
Please visit the repository linked to view the source code:
https://github.com/noatpad/obsidian-banners
*/`;
const prod = (process.argv[2] === 'prod');
const outdir = 'dist';

const obsimove: esbuild.Plugin = {
  name: 'obsimove',
  setup(build) {
    build.onEnd(async () => {
      await fs.rename(`${outdir}/main.css`, `${outdir}/styles.css`);
      await fs.copyFile('manifest.json', `${outdir}/manifest.json`);
      await fs.writeFile(`${outdir}/.hotreload`, '');

      // Copy to dev vault if needed
      if (!prod && process.env.DEVDIR) {
        copyNewer('{.*,**}', process.env.DEVDIR, { cwd: outdir });
      }
    });
  }
};

// eslint-disable-next-line import/no-named-as-default-member
const context = await esbuild.context({
  banner: { js: BANNER },
  entryPoints: ['src/main.ts'],
  bundle: true,
  plugins: [
    esbuildSvelte({
      compilerOptions: { css: 'external' },
      preprocess: sveltePreprocess()
    }),
    obsimove
  ],
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins
  ],
  format: 'cjs',
  target: 'es2020',
  treeShaking: true,
  minify: prod,
  sourcemap: prod ? false : 'inline',
  color: true,
  outdir,
  logLevel: 'info'
});

if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.watch();
}
